CREATE USER shop IDENTIFIED BY shop7;
GRANT CONNECT, RESOURCE TO shop;

-- 사용자
CREATE TABLE CMMN_USER (
		ID VARCHAR2(30) NOT NULL,
		PASSWORD VARCHAR2(100) NULL,
		NAME VARCHAR2(30) NULL,
		ROLE VARCHAR2(50) NULL,
		TEL VARCHAR2(11) NULL,
		EMAIL VARCHAR2(100) NULL,
		PASSWORD_FAIL NUMBER(1) NULL,
		JOIN_DTTM DATE NULL,
		SYS_DTTM DATE NULL,
		SYS_CHG_DTTM DATE NULL
);

ALTER TABLE CMMN_USER ADD ADDRESS VARCHAR2(512) NULL;
ALTER TABLE CMMN_USER ADD ADDRESS2 VARCHAR2(512) NULL;
ALTER TABLE CMMN_USER ADD SEX CHAR(1) NULL;
ALTER TABLE CMMN_USER MODIFY ROLE VARCHAR2(50);
ALTER TABLE CMMN_USER ADD REFRESH_TOKEN VARCHAR2(300);
ALTER TABLE CMMN_USER ADD ZIP_CD VARCHAR2(5);
ALTER TABLE CMMN_USER ADD DEL_YN CHAR(1);

-- 사용자
ALTER TABLE CMMN_USER
	ADD CONSTRAINT PK_CMMN_USER -- 사용자 기본키
	PRIMARY KEY (
		ID -- 아이디
	);

-- 공통코드
CREATE TABLE CMMN_CODE (
		CMN_CD VARCHAR2(30) NOT NULL,
		CMN_NM VARCHAR2(300) NOT NULL,
		CMN_TYPE VARCHAR2(100) NOT NULL,
		DEL_YN CHAR(1) NULL,
		SRT_ODR INTEGER NULL,
		CODE_DETAIL VARCHAR2(100) NULL
);

-- 공통 시퀀스
CREATE TABLE CMMN_SEQ (
		SEQ_VAL VARCHAR2(100) NOT NULL,
		SEQ_TYPE VARCHAR2(100) NOT NULL,
		SEQ_LENGTH INTEGER NULL,
		SEQ_DTTM VARCHAR2(8) NULL,
		DTTM_TYPE VARCHAR2(20) NULL,
		DETAIL VARCHAR2(100) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 공통 파일
CREATE TABLE CMMN_FILE (
		FILE_ID VARCHAR2(30) NOT NULL,
		FILE_REF VARCHAR2(30) NULL,
		FILE_DIV VARCHAR2(20) NOT NULL,
		FILE_SRC VARCHAR2(100) NOT NULL,
		FILE_NM VARCHAR2(300) NULL,
		FILE_REAL_NM VARCHAR2(300) NULL,
		SRT_ODR INTEGER NULL,
		DEL_YN CHAR(1) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 공통 메뉴
CREATE TABLE CMMN_MENU (
		MENU_ID VARCHAR2(10) NOT NULL,
		MENU_NAME VARCHAR2(50) NULL,
		LVL NUMBER NULL,
		LOC VARCHAR2(1024) NULL,
		UP_ID VARCHAR2(10) NULL,
		SRT_ODR NUMBER NULL,
		ROLE VARCHAR2(30) NULL, 
		MENU_DIV VARCHAR2(20) NULL,
		COMPONENT VARCHAR2(100) NULL,
		NAME VARCHAR2(100) NULL
);
ALTER TABLE CMMN_MENU MODIFY ROLE VARCHAR2(50);
ALTER TABLE CMMN_MENU ADD COMPONENT VARCHAR2(100);
ALTER TABLE CMMN_MENU ADD NAME VARCHAR2(100);
ALTER TABLE CMMN_MENU ADD EXC_ROLE VARCHAR2(30);

-- 공통 메뉴
ALTER TABLE CMMN_MENU
	ADD CONSTRAINT PK_CMMN_MENU -- 공통 메뉴 기본키
	PRIMARY KEY (
		MENU_ID -- 메뉴 번호
	);

-- 상품
CREATE TABLE PRODUCT_MST (
		PRODUCT_ID VARCHAR2(20) NOT NULL,
		PRODUCT_NAME VARCHAR2(300) NOT NULL,
		PRODUCT_DETAIL CLOB NULL,
		PRICE INTEGER NOT NULL,
		PRODUCT_STATE VARCHAR2(10) NULL, 
		PRODUCT_TYPE VARCHAR2(10) NULL, 
		PRODUCT_VIEW INTEGER NULL,
		DEL_YN CHAR(1) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 상품
ALTER TABLE PRODUCT_MST
	ADD CONSTRAINT PK_PRODUCT_MST -- 상품 기본키
	PRIMARY KEY (
		PRODUCT_ID -- 상품번호
	);

-- 공통파일
CREATE TABLE PRODUCT_FILE (
		FILE_ID VARCHAR2(30) NOT NULL,
		PRODUCT_ID VARCHAR2(20) NOT NULL,
		FILE_SRC VARCHAR2(100) NOT NULL,
		FILE_NM VARCHAR2(300) NULL,
		FILE_REAL_NM VARCHAR2(300) NULL,
		SRT_ODR INTEGER NULL,
		DEL_YN CHAR(1) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 공통파일
ALTER TABLE PRODUCT_FILE
	ADD CONSTRAINT PK_PRODUCT_FILE -- 공통파일 기본키
	PRIMARY KEY (
		FILE_ID -- 파일번호
	);

-- 공통파일
ALTER TABLE PRODUCT_FILE
	ADD CONSTRAINT FK_PRODUCT_MST_TO_PRODUCT_FILE -- 상품 -> 공통파일
	FOREIGN KEY (
		PRODUCT_ID -- 상품번호
	)
	REFERENCES PRODUCT_MST ( -- 상품
		PRODUCT_ID -- 상품번호
	);

-- 상품 후기
CREATE TABLE PRODUCT_REVIEW (
		REVIEW_NO VARCHAR2(20) NOT NULL,
		PRODUCT_NO VARCHAR2(20) NOT NULL,
		PAYMENT_NO VARCHAR2(20) NOT NULL,
		REVIEW_TYPE	VARCHAR2(10) NULL,
		USR_ID VARCHAR2(30) NOT NULL,
		TITLE VARCHAR2(1024) NOT NULL,
		CONTENT VARCHAR2(1024) NULL,
		SCOPE NUMBER NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 상품 후기
ALTER TABLE PRODUCT_REVIEW
	ADD CONSTRAINT PK_PRODUCT_REVIEW -- 상품 후기 기본키
	PRIMARY KEY (
		REVIEW_NO -- 상품후기번호
	);

-- 상품 후기
ALTER TABLE PRODUCT_REVIEW
	ADD CONSTRAINT FK_PRODUCT_LIST_TO_REVIEW -- 상품 -> 상품 후기
	FOREIGN KEY (
		PRODUCT_NO -- 상품번호
	)
	REFERENCES PRODUCT_LIST ( -- 상품
		PRODUCT_NO -- 상품번호
	);

-- 상품 상세
CREATE TABLE PRODUCT_LIST (
		PRODUCT_NO VARCHAR2(20) NOT NULL,
		PRODUCT_ID VARCHAR2(20) NOT NULL,
		PRODUCT_SIZE VARCHAR2(30) NULL,
		PRODUCT_CNT INTEGER NULL,
		DEL_YN CHAR(1) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);
ALTER TABLE PRODUCT_LIST ADD PRICE_DISCOUNT NUMBER;
ALTER TABLE PRODUCT_LIST ADD CONSTRAINT PRODUCT_CNT_CHK CHECK(PRODUCT_CNT >= 0);

-- 상품 상세
ALTER TABLE PRODUCT_LIST
	ADD CONSTRAINT PK_PRODUCT_LIST -- 상품 상세 기본키
	PRIMARY KEY (
		PRODUCT_NO -- 상품 상세번호
	);

-- 상품 상세
ALTER TABLE PRODUCT_LIST
	ADD CONSTRAINT FK_PRODUCT_MST_TO_PRODUCT_LIST -- 상품 -> 상품 상세
	FOREIGN KEY (
		PRODUCT_ID -- 상품번호
	)
	REFERENCES PRODUCT_MST ( -- 상품
		PRODUCT_ID -- 상품번호
	);

-- 상품 장바구니
CREATE TABLE PRODUCT_BASKET (
		BASKET_NO VARCHAR2(20) NOT NULL,
		PRODUCT_NO VARCHAR2(20) NOT NULL,
		USR_ID VARCHAR2(30) NOT NULL,
		PRODUCT_CNT INTEGER NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL
);

-- 상품 장바구니
ALTER TABLE PRODUCT_BASKET
	ADD CONSTRAINT PK_PRODUCT_BASKET -- 상품 장바구니 기본키
	PRIMARY KEY (
		BASKET_NO -- 장바구니 번호
	);

-- 상품 장바구니
ALTER TABLE PRODUCT_BASKET
	ADD CONSTRAINT FK_PRODUCT_LIST_TO_BASKET -- 상품 상세 -> 상품 장바구니
	FOREIGN KEY (
		PRODUCT_NO -- 상품 상세번호
	)
	REFERENCES PRODUCT_LIST ( -- 상품 상세
		PRODUCT_NO -- 상품 상세번호
	);

-- 상품 주문내역
CREATE TABLE PRODUCT_ORDER (
		ORDER_NO VARCHAR2(20) NOT NULL,
		USR_ID VARCHAR2(30) NULL,
		ORDER_DTTM DATE NULL,
		PAY_METHOD VARCHAR2(20) NULL,
		MERCHANT_UID VARCHAR2(100) NULL,
		NAME VARCHAR2(200) NULL,
		AMOUNT INTEGER NULL,
		BUYER_EMAIL VARCHAR2(100) NULL,
		BUYER_NAME VARCHAR2(30) NULL,
		BUYER_TEL VARCHAR2(11) NULL,
		BUYER_ADDR VARCHAR2(512) NULL,
		BUYER_POSTCODE VARCHAR2(10) NULL,
		MEMO VARCHAR2(512) NULL
);

-- 상품 주문내역
ALTER TABLE PRODUCT_ORDER
	ADD CONSTRAINT PK_PRODUCT_ORDER -- 상품 주문내역 기본키
	PRIMARY KEY (
		ORDER_NO -- 주문번호
	);

-- 상품 구매내역
CREATE TABLE PRODUCT_PAYMENT (
		PAYMENT_NO VARCHAR2(20) NOT NULL,
		ORDER_NO VARCHAR2(20) NOT NULL,
		PRODUCT_NO VARCHAR2(20) NOT NULL,
		PRODUCT_CNT INTEGER NULL,
		PRICE INTEGER NULL,
		BUY_PRICE INTEGER NULL,
		PRICE_DISCOUNT INTEGER NULL,
		PAYMENT_DTTM DATE NULL,
		PAYMENT_WAY VARCHAR2(30) NULL,
		PAYMENT_YN CHAR(1) NULL,
		PAYMENT_STATE VARCHAR2(10) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);

-- 상품 구매내역
/*
CREATE TABLE PRODUCT_PAYMENT (
		PAYMENT_NO VARCHAR2(20) NOT NULL,
		ORDER_NO VARCHAR2(20) NOT NULL,
		PRODUCT_NO VARCHAR2(20) NOT NULL,
		BUY_PRICE INTEGER NULL,
		PAYMENT_DTTM DATE NULL,
		PAYMENT_WAY VARCHAR2(30) NULL,
		PAYMENT_YN CHAR(1) NULL,
		PAYMENT_STATE VARCHAR2(10) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);*/

-- 상품 구매내역
ALTER TABLE PRODUCT_PAYMENT
	ADD CONSTRAINT PK_PRODUCT_PAYMENT -- 상품 구매내역 기본키
	PRIMARY KEY (
		PAYMENT_NO -- 구매내역번호
	);

-- 상품 구매내역
ALTER TABLE PRODUCT_PAYMENT
	ADD CONSTRAINT FK_PRODUCT_LIST_TO_PAYMENT -- 상품 상세 -> 상품 구매내역
	FOREIGN KEY (
		PRODUCT_NO -- 상품 상세번호
	)
	REFERENCES PRODUCT_LIST ( -- 상품 상세
		PRODUCT_NO -- 상품 상세번호
	);

-- 상품 구매내역
ALTER TABLE PRODUCT_PAYMENT
	ADD CONSTRAINT FK_PRODUCT_ORDER_TO_PAYMENT -- 상품 주문내역 -> 상품 구매내역
	FOREIGN KEY (
		ORDER_NO -- 주문번호
	)
	REFERENCES PRODUCT_ORDER ( -- 상품 주문내역
		ORDER_NO -- 주문번호
	);

-- 구매내역 상태

CREATE TABLE PAYMENT_STATE (
		PAYMENT_NO VARCHAR2(20) NULL,
		PAYMENT_STATE VARCHAR2(10) NULL,
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL
);
DROP TABLE PAYMENT_STATE ;
-- 구매내역 상태
ALTER TABLE PAYMENT_STATE
	ADD CONSTRAINT FK_PAYMENT_TO_PAYMENT_STATE -- 상품 구매내역 -> 구매내역 상태
	FOREIGN KEY (
		PAYMENT_NO -- 구매내역번호
	)
	REFERENCES PRODUCT_PAYMENT ( -- 상품 구매내역
		PAYMENT_NO -- 구매내역번호
	);

-- 상품 카테고리
CREATE TABLE PRODUCT_TYPE(
		TYPE_CD VARCHAR2(20) UNIQUE NULL,
		TYPE_NM VARCHAR2(100) NOT NULL,
		UP_CD VARCHAR2(20) NULL,
		DEL_YN CHAR(1) NULL,
		SRT_ODR INTEGER NULL
);

ALTER TABLE PRODUCT_TYPE ADD UNIQUE (TYPE_CD);

-- 인증번호
CREATE TABLE CERT_TMP (
		CERT_SEQ VARCHAR2(100) NULL,
		DIV_CD VARCHAR2(100) NULL,
		CERT_NUM VARCHAR2(10) NULL,
		REQ_DTTM DATE NULL
);

-- 게시판
CREATE TABLE BBS_MST (
		BBS_NO VARCHAR2(20) NOT NULL,
		BBS_TYPE VARCHAR2(20) NOT NULL,
		USR_ID VARCHAR2(30) NOT NULL,
		TITLE VARCHAR2(1024) NULL,
		CONTENT CLOB NULL,
		"COMMENT" VARCHAR2(1024) NULL,
		VIEW_CNT INTEGER NULL,
		WRT_STATE VARCHAR2(20) NULL,
		DEL_YN CHAR(1) NULL, 
		SYS_ENR_ID VARCHAR2(30) NULL,
		SYS_ENR_DTTM DATE NULL,
		SYS_CHG_ID VARCHAR2(30) NULL,
		SYS_CHG_DTTM DATE NULL
);
ALTER TABLE BBS_MST ADD PRODUCT_ID VARCHAR2(20);
-- 게시판
ALTER TABLE BBS_MST
	ADD CONSTRAINT PK_BBS_MST -- 게시판 기본키
	PRIMARY KEY (
		BBS_NO -- 게시판 번호
	);

-- 시퀀스 추출 Function (컴파일 문제로 Oracle Sql Developer)
-- param : CMN_SEQ.SEQ_TYPE
-- return : SEQ_TYPE || SEQ_DTTM || LPAD(SEQ_VAL, SEQ_LENGTH, '0')
CREATE OR REPLACE FUNCTION FN_SEQ(v_seq_type VARCHAR)
    RETURN VARCHAR
IS
   v_seq VARCHAR2(100);
   pragma autonomous_transaction;
BEGIN

  UPDATE CMMN_SEQ 
     SET SEQ_VAL = '1'
       , SEQ_DTTM = TO_CHAR(SYSDATE, DTTM_TYPE)
   	   , SYS_CHG_DTTM = SYSDATE
   WHERE SEQ_TYPE = v_seq_type
     AND TO_CHAR(SYSDATE, DTTM_TYPE) <> SEQ_DTTM;

    COMMIT; 

    SELECT SEQ_TYPE || SEQ_DTTM ||
        	LPAD(SEQ_VAL, SEQ_LENGTH,'0') 
      INTO v_seq
      FROM CMMN_SEQ
     WHERE SEQ_TYPE = v_seq_type;

    UPDATE CMMN_SEQ 
       SET SEQ_VAL = SEQ_VAL + 1
         , SYS_CHG_DTTM = SYSDATE
     WHERE SEQ_TYPE = v_seq_type;

     COMMIT;
     
RETURN v_seq;
END;

-- 할인 금액 구하기 Function (컴파일 문제로 Oracle Sql Developer)
-- param : PRODUCT_LIST.PRODUCT_NO
-- return : TOT_PRICE(PRODUCT_MST.PRICE * PRODUCT_LIST.PRICE_DISCOUNT %)
CREATE OR REPLACE FUNCTION FN_TOT_PRICE(v_product_no VARCHAR)
    RETURN VARCHAR
IS
   v_tot_price NUMBER;
BEGIN

    SELECT CASE WHEN PL.PRICE_DISCOUNT IS NOT NULL THEN ROUND(PM.PRICE - (PM.PRICE * (NVL(PL.PRICE_DISCOUNT, 0) / 100)))
			ELSE PM.PRICE 
			 END TOT_PRICE
      INTO v_tot_price
      FROM PRODUCT_MST PM
         , PRODUCT_LIST PL
     WHERE PM.PRODUCT_ID = PL.PRODUCT_ID 
       AND PL.PRODUCT_NO = v_product_no;
    
RETURN v_tot_price;
END;

-- 공통코드명 구하기 
-- param : CMMN_CODE.CMN_CD(공통코드), CMMN_CODE.CMN_TYPE(공통코드 타입)
-- return : CMN_NM(공통코드명)
CREATE OR REPLACE FUNCTION FN_CMMN_CODE_NM(v_cmn_cd VARCHAR, v_cmn_type VARCHAR)
    RETURN VARCHAR
IS
   v_cmn_nm VARCHAR2(300);
BEGIN

    SELECT CMN_NM 
      INTO v_cmn_nm
      FROM CMMN_CODE CC
     WHERE 1=1
       AND CC.DEL_YN   = 'N'
       AND CC.CMN_CD   = v_cmn_cd
       AND CC.CMN_TYPE = v_cmn_type;
       
RETURN v_cmn_nm;
END;

-- 상품 판매량 구하기
-- param : product_id(상품코드)
-- return : sales_rate(판매량)
CREATE OR REPLACE FUNCTION FN_SALES_RATE(v_product_id VARCHAR)
    RETURN VARCHAR
IS
   v_sales_rate NUMBER;
BEGIN

    SELECT NVL(SUM(PP.PRODUCT_CNT), 0) AS CNT
      INTO v_sales_rate
      FROM (
            SELECT PRODUCT_NO
                 , PRODUCT_CNT
              FROM PRODUCT_PAYMENT pp 
             WHERE 1=1
               AND PP.PAYMENT_YN = 'Y'
               AND PP.PAYMENT_STATE(+) IN ('PC', 'DS', 'DD', 'DC', 'BC')    /* 결제완료, 배송 대기, 시작, 완료, 구매확정 */
            ) PP
        , (
            SELECT PRODUCT_NO
              FROM PRODUCT_LIST PL
             WHERE 1=1
               AND PL.PRODUCT_ID = v_product_id
            ) PL
     WHERE PP.PRODUCT_NO = PL.PRODUCT_NO;
       
RETURN v_sales_rate;
END;